## Process this file with automake to generate Makefile.in.
## 19990904 mortene.

ALLSOURCES = \
	SbIntList.cpp \
	SbIntList.h \
	SbList.cpp \
	SbList.h \
	SbPList.cpp \
	SbPList.h \
	SbStringList.cpp \
	SbStringList.h \
	SoActionMethodList.cpp \
	SoActionMethodList.h \
	SoAuditorList.cpp \
	SoAuditorList.h \
	SoBaseList.cpp \
	SoBaseList.h \
	SoCallbackList.cpp \
	SoCallbackList.h \
	SoDetailList.cpp \
	SoDetailList.h \
	SoEnabledElementsList.cpp \
	SoEnabledElementsList.h \
	SoEngineList.cpp \
	SoEngineList.h \
	SoEngineOutputList.cpp \
	SoEngineOutputList.h \
	SoFieldList.cpp \
	SoFieldList.h \
	SoNodeList.cpp \
	SoNodeList.h \
	SoPathList.cpp \
	SoPathList.h \
	SoPickedPointList.cpp \
	SoPickedPointList.h \
	SoTypeList.cpp \
	SoTypeList.h \
	SoVRMLInterpOutputList.cpp \
	SoVRMLInterpOutputList.h

ALLINSTHEADERS = \
	$(top_srcdir)/include/Inventor/lists/SbIntList.h \
	$(top_srcdir)/include/Inventor/lists/SbList.h \
	$(top_srcdir)/include/Inventor/lists/SbPList.h \
	$(top_srcdir)/include/Inventor/lists/SbStringList.h \
	$(top_srcdir)/include/Inventor/lists/SoActionMethodList.h \
	$(top_srcdir)/include/Inventor/lists/SoAuditorList.h \
	$(top_srcdir)/include/Inventor/lists/SoBaseList.h \
	$(top_srcdir)/include/Inventor/lists/SoCallbackList.h \
	$(top_srcdir)/include/Inventor/lists/SoDetailList.h \
	$(top_srcdir)/include/Inventor/lists/SoEnabledElementsList.h \
	$(top_srcdir)/include/Inventor/lists/SoEngineList.h \
	$(top_srcdir)/include/Inventor/lists/SoEngineOutputList.h \
	$(top_srcdir)/include/Inventor/lists/SoFieldList.h \
	$(top_srcdir)/include/Inventor/lists/SoNodeList.h \
	$(top_srcdir)/include/Inventor/lists/SoPathList.h \
	$(top_srcdir)/include/Inventor/lists/SoPickedPointList.h \
	$(top_srcdir)/include/Inventor/lists/SoTypeList.h \
	$(top_srcdir)/include/Inventor/lists/SoVRMLInterpOutputList.h

##$ BEGIN TEMPLATE Make-Common(lists)

# Everything below is autogenerated from a macro, so don't modify
# within the Makefile.am itself. 19991201 mortene.

if HACKING_DYNAMIC_MODULES
lib_LTLIBRARIES = liblistsLINKHACK.la
else
noinst_LTLIBRARIES = liblists.la
endif


# This macro contains fixes to avoid the default flush of output from
# the automake generated rules. 19991201 mortene. 

LIBTOOL = @LIBTOOL@ --silent

# This macro contains fixes to avoid the default flush of output from
# the automake generated rules. 19991201 mortene. 

liblistsLINKHACK.la: $(liblistsLINKHACK_la_OBJECTS) $(liblistsLINKHACK_la_DEPENDENCIES)
	@echo Linking liblistsLINKHACK.la
	@$(CXXLINK) -rpath $(libdir) $(liblistsLINKHACK_la_LDFLAGS) $(liblistsLINKHACK_la_OBJECTS) $(liblistsLINKHACK_la_LIBADD) $(LIBS)

liblists.la: $(liblists_la_OBJECTS) $(liblists_la_DEPENDENCIES)
	@echo Linking liblists.la
	@$(CXXLINK)  $(liblists_la_LDFLAGS) $(liblists_la_OBJECTS) $(liblists_la_LIBADD) $(LIBS)

# This macro contains fixes to avoid the default flush of output from
# the automake generated rules. 19991201 mortene. 


# FIXME: the non-dependency rules won't be overridden without make
# emitting ugly warnings. 19991201 mortene.

#.cpp.o:
#	@echo Compiling $< | sed -e 's/\/.*\///'
#	@$(CXXCOMPILE) -c $<
#
#.cpp.lo:
#	@echo Compiling $< | sed -e 's/\/.*\///'
#	@$(LTCXXCOMPILE) -c $<
#

%.o: %.cpp
	@echo Compiling $< | sed -e 's/\/.*\///'; \
	$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.cpp
	@echo Compiling $< | sed -e 's/\/.*\///'; \
	$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp


# Remove any linklibraries detected by configure, as they are not
# needed in the submodules -- only in the toplevel libCoin build.
LIBS = 

INCLUDES = -I$(top_srcdir)/include -I$(top_builddir)/include

liblists_la_SOURCES = $(ALLSOURCES)
liblistsLINKHACK_la_SOURCES = $(ALLSOURCES)

liblistsincdir = $(includedir)/Inventor/lists
liblistsLINKHACKincdir = $(includedir)/Inventor/lists

liblistsinc_HEADERS = $(ALLINSTHEADERS)
liblistsLINKHACKinc_HEADERS = $(ALLINSTHEADERS)


# FIXME: this is a temporary workaround for a bug in Automake. The
# bug is fixed in the latest Automake CVS, but not in any "official"
# release (?). Last checked with Automake 1.4a. 19990912 mortene.

install-liblistsincHEADERS: $(liblistsinc_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(liblistsincdir)
	@list='$(liblistsinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(liblistsincdir)/$$f"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(liblistsincdir)/$$f; \
	done

uninstall-liblistsincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(liblistsinc_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(liblistsincdir)/$$f"; \
	  rm -f $(DESTDIR)$(liblistsincdir)/$$f; \
	done


# FIXME: this is a temporary workaround for a bug in Automake. The
# bug is fixed in the latest Automake CVS, but not in any "official"
# release (?). Last checked with Automake 1.4a. 19990912 mortene.

install-liblistsLINKHACKincHEADERS: $(liblistsLINKHACKinc_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(liblistsLINKHACKincdir)
	@list='$(liblistsLINKHACKinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(liblistsLINKHACKincdir)/$$f"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(liblistsLINKHACKincdir)/$$f; \
	done

uninstall-liblistsLINKHACKincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(liblistsLINKHACKinc_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(liblistsLINKHACKincdir)/$$f"; \
	  rm -f $(DESTDIR)$(liblistsLINKHACKincdir)/$$f; \
	done


##$ END TEMPLATE Make-Common
