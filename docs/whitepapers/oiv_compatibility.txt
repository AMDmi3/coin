The Open Inventor Compatibility of Coin
=======================================

The Open Inventor API is HUGE, and achieving 100% compatibility with
it is going to be a feat.  Ultimately, we want Coin to be 100%
compatible with Open Inventor, but for now we have chosen to be
incompatible in certain areas.  Some of these incompatibilities will
be purely internal and not noticeable for people who develops Open
Inventor-based applications.

There are certain notable "hacks" in the latest version of Open Inventor
that are set aside for now.


Incompatibilities
=================

* SoLazyElement
    The SoLazyElement element is an ugly hack that was introduced late in the
    Open Inventor development history.  It is actually a collection of other
    elements (that now are deprecated).

    We have chosen not to implement the SoLazyElement element and instead
    implement the deprecated elements instead at this time.
    The lack of the SoLazyElement element should not be noticeable for the
    most common Open Inventor usage.  For advanced users (users that create
    actions and such), some code may need to be modified because of this.

    There are several reasons for staying away from the SoLazyElement element.

    - The name is moronic.  It does not tell you what data it manages, just
      in which manner it is managed.

    - Bundling elements in the SoLazyElement way messes with the structure and
      design of Open Inventor, it makes it harder to get to know the code and
      it also makes it harder to maintain the code.

    - Lazy evaluation can be implemented in any element (and we have done that
      in a lot of them).

    In the future, we might implement some structured element bundling system,
    which we might use to support the SoLazyElement element.  For now we use
    the atomic approach with each element separate.

* SoGLLazyElement
    See SoLazyElement.

