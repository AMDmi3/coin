This document describes a tentative plan with suggestions for how the
Coin development should proceed.


Changelog:
	19991031 mortene	Created.

==========================================================================

MILESTONE 1
===========

Goal: Make Coin a fully usable retained mode rendering library for
development of 3D applications on UNIX systems, Microsoft Windows and
BeOS. The library will provide the application programmer with a
documented API with functionality for scene graph rendering,
interaction with the 3D shapes in the scenes, and full import and
export capabilities.


State of library when milestone is met:

* an SoQt interface library against Troll Tech's Qt[1] fully
  implemented according to the functionality provided from the Open
  Inventor SoXt API, with the possible exception of missing support
  for the more esoteric input devices (spaceball), and complex
  rendering modes (overlay planes, stereo mode).

  (Using the Qt library will be the only option when doing UNIX/X11
  and MS Windows development with Coin on milestone 1.)

* an SoBe interface library against the BeOS[2] GUI fully implemented
  according to the functionality provided from the Open Inventor SoXt
  API, with the possible exception of missing support for the more
  esoteric input devices (spaceball), and complex rendering modes
  (overlay planes, stereo mode).

* import code can load all Open Inventor scene graph files, in the
  open ASCII format aswell as the proprietary binary format.

* all basic geometry and utility classes are implemented: SbBox*,
  SbColor, SbCylinder, SbDict, SbLine, SbMatrix, SbName and SbString,
  SbPlane, SbRotation, SbSphere, SbTime, SbVec*, SbViewVolume,
  SbViewportRegion, SbXfBox3f, the most common list classes.

* there are complete implementations of these action classes:

	- the actions for rendering functionality:
          SoGetBoundingBoxAction, SoBoxHighlightRenderAction,
          SoGLRenderAction, SoLineHighlightRenderAction

	- actions for event handling, including interaction through
          "picking": SoHandleEventAction, SoPickAction,
          SoRayPickAction

	- scene graph export: SoWriteAction. The code belonging to
          this action can export Open Inventor scene graphs in ASCII
          or binary format.

	- actions for miscellaneous scene graph operations:
	  SoCallbackAction, SoGetMatrixAction, SoSearchAction,
	  SoGetPrimitiveCountAction.

* there is complete support for image textures on all 3D objects which
  should support them.

* all engine classes fully implemented according to what Open Inventor
  provides.

* all error classes fully implemented according to what Open Inventor
  provides.

* all event classes fully implemented according to what Open Inventor
  provides.

* all field classes fully implemented according to what SGI Open
  Inventor[3] 2.1 provides.

* all dragger classes fully implemented according to what Open
  Inventor provides.

* all manipulator classes fully implemented according to what Open
  Inventor provides.

* all nodekit classes fully implemented according to what Open
  Inventor provides.

* all projector classes fully implemented according to what Open
  Inventor provides.

* all sensor classes fully implemented according to what Open Inventor
  provides.

* node classes implemented according to what SGI Open Inventor 2.1
  provides, with these exceptions and/or limitations:

	- nodes used for rendering various types of 3D text will
          support a limited set of import routines for font data, as
          well as a limited set of rendering capabilities.

	- SoColorIndex node not supported.

	- nodes used for rendering nurbs curves and nurbs surfaces
          will only provide the rendering functionality which is
          possible to accomplish with the nurb support in the GLU
          OpenGL companion library.

	- 2D bitmapped fonts will only be supported through native
          import routines on the system.

	- no network support for URLs in SoWWWAnchor and SoWWWInline.

* bundles, caches, details and elements will be implemented as they
  are needed, we will not be concerned about Open Inventor
  API-compatibility for these classes for milestone 1.

* no support for rendering in OpenGL colorindex mode.

* all API elements will be documented, albeit some of the
  documentation will be a little on the sparse side.
	
* platform availability:
	- supported: Linux, BeOS
	- additional: MSWindows (with Troll Tech's Qt), most UNIX
          platforms




MILESTONE 2
===========

Goal: Make the Coin API be fully compatible with the SGI Open Inventor
2.1 API. Implement most Open Inventor functionality, and provide
"shortcut" implementations on the more advanced functionality which is
postponed until milestone 3. All existing applications written for SGI
Open Inventor 2.1 should be easily portable to Coin with no or minimum
effort.

Additional development since milestone 1:

* implementation of the SoXt library.

* implementation of the SoWin library.

* proper 3D font support.

* set up SGI Open Inventor 2.1 compatible APIs for bundles, caches,
  details, elements, XXX

* overlay mode

* stereo mode

* XXX documentation


MILESTONE 3
===========

Goal: Implement enough of the functionality missing from Coin to have
it replace QvLib as the fundamental import/export/rendering library of
Rational Reducer[4].


Additional development since milestone 2:

* SoQtSIMViewer
* VRML 1
* VRML 2


* XXX documentation



MILESTONE 4
===========

Goal: Make Coin library 100% compatible with the latest version of the
Open Inventor library from TGS[5], including _all_ functionality. Tune
the performance of Coin to be at least on par with the latest Open
Inventor.

Additional development since milestone 3:

* VRML 1 upgraders

* full 3D-font support (including TrueType, profiles, etc)

* collision support on par with what is provided by TGS' Open Inventor

SoGlobalSimplifyAction
SoReorganizeAction
SoShapeSimplifyAction
SoSimplifyAction
SoToVRML2Action
SoToVRMLAction

* simplification nodes.

* SoRenderList SoOctTreeOrdering

* network library for loading URLs in all common protocols (HTTP, FTP,
  etc)

* XXX documentation



MILESTONES 5-
=============

Goal: Improve Coin beyond what is provided by Open Inventor.


==============================================================================

REFERENCES:
===========

[1] <URL:http://www.troll.no> XXX complete path to Qt
[2] <URL:http://www.be.com> XXX complete path to BeOS
[3] <URL:http://www.sgi.com/Technology/Inventor/> XXX check validity
[4] <URL:http://www.sim.no> XXX complete path to RR
[5] <URL:http://www.tgs.com/Products/openinv-index.html> XXX check validity
