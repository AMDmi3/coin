dnl  This can be any file in the package.
AC_INIT(src/misc/SoDB.cpp)

dnl  Locate C++ compiler and set C++ as the default language to use
dnl  in tests. The configure script will automatically terminate if
dnl  it doesn't find a C++ compiler.
AC_PROG_CXX
AC_LANG_CPLUSPLUS


dnl *******************************************************************
dnl * Library version control.
dnl *******************************************************************

dnl  Making releases:
dnl    COIN_MICRO_VERSION += 1;
dnl    COIN_INTERFACE_AGE += 1;
dnl    COIN_BINARY_AGE += 1;
dnl  if any functions have been added, set COIN_INTERFACE_AGE to 0.
dnl  if backwards compatibility has been broken,
dnl  set COIN_BINARY_AGE _and_ COIN_INTERFACE_AGE to 0.
dnl 
COIN_MAJOR_VERSION=0
COIN_MINOR_VERSION=6
COIN_MICRO_VERSION=0
COIN_INTERFACE_AGE=0
COIN_BINARY_AGE=0
COIN_VERSION=$COIN_MAJOR_VERSION.$COIN_MINOR_VERSION.$COIN_MICRO_VERSION

AC_SUBST(COIN_MAJOR_VERSION)
AC_SUBST(COIN_MINOR_VERSION)
AC_SUBST(COIN_MICRO_VERSION)
AC_SUBST(COIN_VERSION)
AC_SUBST(COIN_INTERFACE_AGE)
AC_SUBST(COIN_BINARY_AGE)

dnl  libtool versioning
LT_RELEASE=$COIN_MAJOR_VERSION.$COIN_MINOR_VERSION
LT_CURRENT=`expr $COIN_MICRO_VERSION - $COIN_INTERFACE_AGE`
LT_REVISION=$COIN_INTERFACE_AGE
LT_AGE=`expr $COIN_BINARY_AGE - $COIN_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

VERSION=$COIN_VERSION

dnl  These are for include/Inventor/SbBasic.h.

AC_DEFINE_UNQUOTED(COIN_MAJOR_VERSION, $COIN_MAJOR_VERSION)
AC_DEFINE_UNQUOTED(COIN_MINOR_VERSION, $COIN_MINOR_VERSION)
AC_DEFINE_UNQUOTED(COIN_MICRO_VERSION, $COIN_MICRO_VERSION)
AC_DEFINE_UNQUOTED(COIN_VERSION, "$COIN_VERSION")

dnl *******************************************************************
dnl * Miscellaneous options and initializations.
dnl *******************************************************************

AM_INIT_AUTOMAKE(libCoin, $VERSION)

dnl  Files to cram results from the configure tests into.
AM_CONFIG_HEADER(config.h include/Inventor/SbBasic.h)

dnl  Default to not building a static library.
dnl  Can be overridden by the user with --enable-static.
AM_DISABLE_STATIC

dnl  Turn off default maintainer make-rules -- use ./autogen.sh instead.
AM_MAINTAINER_MODE

dnl  Initialize libtool
AC_PROG_LIBTOOL


dnl  These are used for constructing the coin-config file.
COIN_EXTRA_CPPFLAGS=
COIN_EXTRA_LDFLAGS=
COIN_EXTRA_LIBS=
AC_SUBST(COIN_EXTRA_CPPFLAGS)
AC_SUBST(COIN_EXTRA_LDFLAGS)
AC_SUBST(COIN_EXTRA_LIBS)


dnl *******************************************************************
dnl * Set us up for using the simage library (if wanted, and if
dnl * available).
dnl *******************************************************************

SIM_CHECK_SIMAGE([AC_DEFINE(HAVE_LIBSIMAGE)
                 COIN_EXTRA_CPPFLAGS="$COIN_EXTRA_CPPFLAGS $sim_ac_simage_cppflags"
                 COIN_EXTRA_LDFLAGS="$COIN_EXTRA_LDFLAGS $sim_ac_simage_ldflags"
                 COIN_EXTRA_LIBS="$sim_ac_simage_libs $COIN_EXTRA_LIBS"],
                 [AC_MSG_WARN(simage development system not found)])

dnl  We need to check for the math library on our own if its not
dnl  "inherited" from the simage library.
if test x"$sim_ac_simage_avail" = xno; then
  AC_CHECK_LIBM
  LIBS="$LIBM $LIBS"
  COIN_EXTRA_LIBS="$LIBM $COIN_EXTRA_LIBS"
fi


dnl *******************************************************************
dnl * Handle the detection and inclusion of X11 libraries.
dnl *******************************************************************

dnl Code using the OpenGL/Mesa library needs X11 to link on UNIX systems.
AC_PATH_XTRA

if test x"$no_x" != xyes; then
  #  *** DEBUG ***
  #  Keep this around, as it can be handy when testing on new systems.
  # echo "X_CFLAGS: $X_CFLAGS"
  # echo "X_PRE_LIBS: $X_PRE_LIBS"
  # echo "X_LIBS: $X_LIBS"
  # echo "X_EXTRA_LIBS: $X_EXTRA_LIBS"
  # echo
  # echo "CFLAGS: $CFLAGS"
  # echo "CPPFLAGS: $CPPFLAGS"
  # echo "CXXFLAGS: $CXXFLAGS"
  # echo "LDFLAGS: $LDFLAGS"
  # echo "LIBS: $LIBS"
  # exit 0

  LIBS="$X_PRE_LIBS -lX11 $X_EXTRA_LIBS $LIBS"
  CPPFLAGS="$CPPFLAGS $X_CFLAGS"
  LDFLAGS="$LDFLAGS $X_LIBS"

  AC_CACHE_CHECK([whether we can link against X11],
    sim_cv_lib_X11_avail,
    [AC_TRY_LINK([#include <X11/Xlib.h>],
                 [(void)XOpenDisplay(0L);],
                 sim_cv_lib_X11_avail=yes,
                 sim_cv_lib_X11_avail=no)])

  if test x"$sim_cv_lib_X11_avail" = xno; then
    AC_MSG_ERROR([Weird X11 installation.])
  fi

  COIN_EXTRA_CPPFLAGS="$COIN_EXTRA_CPPFLAGS $X_CFLAGS"
  COIN_EXTRA_LDFLAGS="$COIN_EXTRA_LDFLAGS $X_LIBS"
  COIN_EXTRA_LIBS="$X_PRE_LIBS -lX11 $X_EXTRA_LIBS $COIN_EXTRA_LIBS"

  dnl If the X11 shared memory extension is available, it is likely that
  dnl the Mesa libraries will be using it, so include it to be sure.

  sim_ac_save_libs=$LIBS
  LIBS="-lXext $LIBS"

  AC_CACHE_CHECK([whether the X11 shared memory extension is available],
    sim_cv_lib_x11shmem_avail,
    [AC_TRY_LINK([#include <X11/Xlib.h>
                  #include <X11/extensions/XShm.h>],
                 [(void)XShmQueryVersion(0L, 0L, 0L, 0L);],
                 sim_cv_lib_x11shmem_avail=yes,
                 sim_cv_lib_x11shmem_avail=no)])

  if test x"$sim_cv_lib_x11shmem_avail" = xyes; then
    COIN_EXTRA_LIBS="-lXext $COIN_EXTRA_LIBS"
  else
    LIBS=$sim_ac_save_libs
  fi

fi

dnl *******************************************************************
dnl * Test for installation of Mesa or OpenGL development system.
dnl *******************************************************************

SIM_CHECK_OPENGL([AC_DEFINE(HAVE_OPENGL)
                 COIN_EXTRA_CPPFLAGS="$COIN_EXTRA_CPPFLAGS $sim_ac_gl_cppflags"
                 COIN_EXTRA_LDFLAGS="$COIN_EXTRA_LDFLAGS $sim_ac_gl_ldflags"
                 COIN_EXTRA_LIBS="$sim_ac_gl_libs $COIN_EXTRA_LIBS"],
                 AC_MSG_ERROR(needs an OpenGL-compatible development system installation to compile Coin))

# FIXME: should be able to handle systems where OpenGL is not available,
# as it would be handy for making e.g. import/export-only versions of the
# library. 20000123 mortene.

dnl *******************************************************************
dnl ** Check if the Mesa offscreen rendering interface is available.
dnl *******************************************************************
if test x"$sim_ac_gl_is_mesa" = xyes; then
  AC_CACHE_CHECK([whether Mesa offscreen rendering is available],
    sim_cv_func_osmesacreatecontext_avail,
    [AC_TRY_LINK([#include <GL/osmesa.h>],
                 [(void)OSMesaCreateContext(OSMESA_RGB, 0L);],
                 sim_cv_func_osmesacreatecontext_avail=yes,
                 sim_cv_func_osmesacreatecontext_avail=no)])

  if test x"$sim_cv_func_osmesacreatecontext_avail" = xyes; then
    AC_DEFINE(HAVE_OSMESACREATECONTEXT)
  fi
fi


dnl *******************************************************************
dnl * Compiler control.
dnl *******************************************************************

SIM_COMPILE_DEBUG
if test "x$enable_debug" = "xyes"; then
  CXXFLAGS="$CXXFLAGS -DCOIN_DEBUG=1"
else
  CXXFLAGS="$CXXFLAGS -DCOIN_DEBUG=0"
fi

SIM_DEBUGSYMBOLS
SIM_RTTI_SUPPORT
SIM_EXCEPTION_HANDLING
SIM_PROFILING_SUPPORT
SIM_COMPILER_WARNINGS

dnl  Yep, this is important in case we want to add code to make
dnl  the API interface "Open Inventor strict", meaning the user must
dnl  use the exact same include files as under "real" Open Inventor.
dnl  We would then need to know that we are actually allowed to include
dnl  any file during internal build.
CPPFLAGS="$CPPFLAGS -D__SOLIB_INTERNAL__"



AC_CHECK_HEADERS(unistd.h io.h)
AC_CHECK_FUNCS(vsnprintf _vsnprintf snprintf _snprintf)

dnl *******************************************************************
dnl * Enable/disable compilation with the "incremental linking through
dnl * the use of dynamic libraries"-hack.
dnl *******************************************************************

AC_ARG_ENABLE(hacking,
  [  --enable-hacking        enable hacks for quick turn-around [default=no]],
  [case "${enableval}" in
    yes) enable_hacking=yes ;;
    no)  enable_hacking=no ;;
    *) AC_MSG_ERROR(bad value \"${enableval}\" for --enable-hacking) ;;
  esac],
  enable_hacking=no)

AM_CONDITIONAL(HACKING_DYNAMIC_MODULES, test "x$enable_hacking" = "xyes")


dnl *******************************************************************
dnl * Do we want to build the tools?
dnl *******************************************************************

AC_ARG_WITH(tools,
  [  --with-tools            build Coin-based tools [default=yes]],
  [case "${withval}" in
    yes) want_tools=yes ;;
    no)  want_tools=no ;;
    *) AC_MSG_ERROR(bad value \"${withval}\" for --with-tools) ;;
  esac],
  [want_tools=yes])

if test "x$want_tools" = "xno"; then
  echo "FIXME: --without-tools has been temp disabled. 20000112 mortene."
fi

AM_CONDITIONAL(BUILD_TOOLS, test "x$want_tools" = "xyes")

dnl *******************************************************************
dnl * Do we want to build the example programs?
dnl *******************************************************************

AC_ARG_WITH(examples,
  [  --with-examples         build Coin example programs [default=yes]],
  [case "${withval}" in
    yes) want_examples=yes ;;
    no)  want_examples=no ;;
    *) AC_MSG_ERROR(bad value \"${withval}\" for --with-examples) ;;
  esac],
  [want_examples=yes])

if test "x$want_examples" = "xno"; then
  echo "FIXME: --without-tools has been temp disabled. 20000112 mortene."
fi

AM_CONDITIONAL(BUILD_EXAMPLES, test "x$want_examples" = "xyes")

dnl *******************************************************************
dnl * List all files configure shall generate.
dnl *******************************************************************

dnl * To be able to generate include/Inventor/SbBasic.h
test -d include           || mkdir include
test -d include/Inventor  || mkdir include/Inventor

AC_OUTPUT([
        coin-config
        Makefile
        src/Makefile
        src/coindev/Makefile
        src/base/Makefile
        src/VRMLnodes/Makefile
        src/actions/Makefile
        src/bundles/Makefile
        src/caches/Makefile
        src/details/Makefile
        src/draggers/Makefile
        src/elements/Makefile
        src/engines/Makefile
        src/errors/Makefile
        src/events/Makefile
        src/fields/Makefile
        src/manips/Makefile
        src/misc/Makefile
        src/lists/Makefile
        src/nodekits/Makefile
        src/nodes/Makefile
        src/projectors/Makefile
        src/sensors/Makefile
        src/system/Makefile
        tools/Makefile
        tools/ivcat/Makefile
        tools/ivhierarchy/Makefile
        tools/ivNodeKitStructure/Makefile
        tools/renderos/Makefile
        examples/Makefile
        examples/advanced/Makefile
        examples/advanced/elements/Makefile
        ],
        [chmod a+x coin-config])

echo "Now, run 'make install' to build and install Coin."

dnl ************************************************************************
