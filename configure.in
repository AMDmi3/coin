dnl  This can be any file in the package.
AC_INIT(src/misc/SoDB.cpp)

dnl  Locate C++ compiler and set C++ as the default compiler to run
dnl  in tests.
AC_PROG_CXX
AC_LANG_CPLUSPLUS

if test "x$GXX" != "xyes"; then
  AC_MSG_WARN(You are not using the GNU compiler -- other compilers are not well supported at the moment)
fi


dnl *******************************************************************
dnl * Library version control.
dnl *******************************************************************

dnl  Making releases:
dnl    COIN_MICRO_VERSION += 1;
dnl    COIN_INTERFACE_AGE += 1;
dnl    COIN_BINARY_AGE += 1;
dnl  if any functions have been added, set COIN_INTERFACE_AGE to 0.
dnl  if backwards compatibility has been broken,
dnl  set COIN_BINARY_AGE _and_ COIN_INTERFACE_AGE to 0.
dnl 
COIN_MAJOR_VERSION=0
COIN_MINOR_VERSION=6
COIN_MICRO_VERSION=0
COIN_INTERFACE_AGE=0
COIN_BINARY_AGE=0
COIN_VERSION=$COIN_MAJOR_VERSION.$COIN_MINOR_VERSION.$COIN_MICRO_VERSION

AC_SUBST(COIN_MAJOR_VERSION)
AC_SUBST(COIN_MINOR_VERSION)
AC_SUBST(COIN_MICRO_VERSION)
AC_SUBST(COIN_VERSION)
AC_SUBST(COIN_INTERFACE_AGE)
AC_SUBST(COIN_BINARY_AGE)

dnl  libtool versioning
LT_RELEASE=$COIN_MAJOR_VERSION.$COIN_MINOR_VERSION
LT_CURRENT=`expr $COIN_MICRO_VERSION - $COIN_INTERFACE_AGE`
LT_REVISION=$COIN_INTERFACE_AGE
LT_AGE=`expr $COIN_BINARY_AGE - $COIN_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

VERSION=$COIN_VERSION

dnl  These are for include/Inventor/SbBasic.h.

AC_DEFINE_UNQUOTED(COIN_MAJOR_VERSION, $COIN_MAJOR_VERSION)
AC_DEFINE_UNQUOTED(COIN_MINOR_VERSION, $COIN_MINOR_VERSION)
AC_DEFINE_UNQUOTED(COIN_MICRO_VERSION, $COIN_MICRO_VERSION)
AC_DEFINE_UNQUOTED(COIN_VERSION, "$COIN_VERSION")

dnl *******************************************************************
dnl * Miscellaneous options and initializations.
dnl *******************************************************************

AM_INIT_AUTOMAKE(libCoin, $VERSION)

dnl  File to cram results from the configure tests into.
AM_CONFIG_HEADER(config.h include/Inventor/SbBasic.h)

dnl  Default to not building a static library.
dnl  Can be overridden by the user with --enable-static.
AM_DISABLE_STATIC

dnl  Turn off default maintainer make-rules -- use ./autogen.sh instead.
AM_MAINTAINER_MODE

dnl  Initialize libtool
AM_PROG_LIBTOOL

dnl  Yep, this is important in case we want to add code to make
dnl  the API interface "Open Inventor strict", meaning the user must
dnl  use the exact same include files as under "real" Open Inventor.
dnl  We would then need to know that we are actually allowed to include
dnl  any file during internal build.
CXXFLAGS="$CXXFLAGS -D__SOLIB_INTERNAL__"


dnl *******************************************************************
dnl * Test for installation of Mesa or OpenGL development system.
dnl *******************************************************************

dnl Code using the OpenGL/Mesa library needs X11 to link on UNIX systems.
AC_PATH_XTRA

dnl *** DEBUG ***
dnl Keep this around, as it can be handy when testing on new systems.
dnl echo "X_CFLAGS: $X_CFLAGS"
dnl echo "X_PRE_LIBS: $X_PRE_LIBS"
dnl echo "X_LIBS: $X_LIBS"
dnl echo "X_EXTRA_LIBS: $X_EXTRA_LIBS"

AC_ARG_ENABLE(Mesa,
  [  --enable-Mesa           prefer Mesa (if found) over native OpenGL
                          [default=yes]],
  [case "${enableval}" in
    yes) enable_mesa=yes ;;
    no)  enable_mesa=no ;;
    *) AC_MSG_ERROR(bad value \"${enableval}\" for --enable-Mesa) ;;
  esac],
  enable_mesa=yes)

if test "x$enable_mesa" = "xyes"; then
  GL_search_list="MesaGL GL"
  GLU_search_list="MesaGLU GLU"
else
  GL_search_list="GL MesaGL"
  GLU_search_list="GLU MesaGLU"
fi

if test "x$no_x" != "xyes"; then
  dnl FIXME: -lXext is needed by -lSM. -lSM is added by AC_PATH_XTRA to
  dnl $X_PRE_LIBS, so -lXext _should_ be automatically added to $X_EXTRA_LIBS
  dnl by the AC_PATH_XTRA macro. This is not the case on my RedHat Linux
  dnl 5.2, at least. Autoconf bug, methinks. 19991030 mortene.
  LIBS="$LIBS $X_LIBS $X_PRE_LIBS -lX11 -lXext $X_EXTRA_LIBS"
  CPPFLAGS="$CPPFLAGS $X_CFLAGS"
fi

AC_LANG_SAVE
AC_LANG_C

SIM_CHECK_MATHLIB

dnl ************************************************************************

AC_SEARCH_LIBS(glAccum, $GL_search_list, , AC_MSG_ERROR([
*** Needs an OpenGL-compatible development installation to compile Coin!]),
               $MATHLIB)
AC_SEARCH_LIBS(gluBeginCurve, $GLU_search_list, , AC_MSG_ERROR([
*** Needs the GLU library to compile Coin!]),
               $MATHLIB)

AC_LANG_RESTORE


dnl *******************************************************************
dnl * Compiler control.
dnl *******************************************************************

SIM_COMPILE_DEBUG
if test "x$enable_debug" = "xyes"; then
  CXXFLAGS="$CXXFLAGS -DCOIN_DEBUG=1"
else
  CXXFLAGS="$CXXFLAGS -DCOIN_DEBUG=0"
fi

SIM_DEBUGSYMBOLS
SIM_RTTI_SUPPORT
SIM_EXCEPTION_HANDLING
SIM_PROFILING_SUPPORT
SIM_COMPILER_WARNINGS

dnl *******************************************************************
dnl * Enable/disable compilation with the "incremental linking through
dnl * the use of dynamic libraries" and other assorted hacks.
dnl *******************************************************************

AC_ARG_ENABLE(hacking,
  [  --enable-hacking        enable hacks for quick turn-around [default=no]],
  [case "${enableval}" in
    yes) enable_hacking=yes ;;
    no)  enable_hacking=no ;;
    *) AC_MSG_ERROR(bad value \"${enableval}\" for --enable-hacking) ;;
  esac],
  enable_hacking=no)

AM_CONDITIONAL(HACKING_DYNAMIC_MODULES, test "x$enable_hacking" = "xyes")


dnl *******************************************************************
dnl * Check if we want to use simage (if available).
dnl *******************************************************************

AC_ARG_WITH(simage,
  [  --with-simage           use simage (if found) for texture import [default=yes]],
  [case "${withval}" in
    yes) want_simage=yes ;;
    no)  want_simage=no ;;
    *) AC_MSG_ERROR(bad value \"${withval}\" for --with-simage) ;;
  esac],
  [want_simage=yes])

dnl *******************************************************************
dnl * Check if libsimage development system is installed (if necessary).
dnl *******************************************************************

if test "x$want_simage" = "xyes"; then
  AC_MSG_CHECKING(for simage header file)

  dnl First try standard system locations.
  AC_TRY_CPP([#include <simage.h>], simage_dev=yes, simage_dev=no)

  dnl Not found in any of the standard system locations, try libCoin
  dnl installation directory.
  if test "x$simage_dev" = "xno"; then
    _COINPREFIX=$prefix
    test "x$_COINPREFIX" = xNONE && _COINPREFIX=$ac_default_prefix
    _COINEPREFIX=$exec_prefix
    test "x$_COINEPREFIX" = xNONE && _COINEPREFIX=$_COINPREFIX
    _SAVECPPFLAGS=$CPPFLAGS
    CPPFLAGS="-I$_COINPREFIX/include $CPPFLAGS"
    AC_TRY_CPP([#include <simage.h>], simage_dev=yes, simage_dev=no)
    CPPFLAGS=$_SAVECPPFLAGS
    if test "x$simage_dev" = "xyes"; then
      CPPFLAGS="-I$_COINPREFIX/include $CPPFLAGS"
      LDFLAGS="-L$_COINEPREFIX/lib $LDFLAGS"
    fi
  fi

  AC_MSG_RESULT($simage_dev)

  if test "x$simage_dev" = "xyes"; then
    AC_CHECK_LIB(simage, simage_read_image, , simage_dev=no, -lz $MATHLIB)
  fi
  if test "$simage_dev" = no; then
    AC_MSG_WARN(libsimage development system not found -- no simage texture support)
  fi
fi

LIBS="$LIBS $MATHLIB"

dnl *******************************************************************
dnl * List all files configure shall generate.
dnl *******************************************************************

dnl * To be able to generate include/Inventor/SbBasic.h
test -d include           || mkdir include
test -d include/Inventor  || mkdir include/Inventor

AC_OUTPUT([
	Makefile
	src/Makefile
	src/coindev/Makefile
	src/base/Makefile
	src/VRMLnodes/Makefile
	src/actions/Makefile
	src/bundles/Makefile
	src/caches/Makefile
	src/elements/Makefile
	src/engines/Makefile
	src/errors/Makefile
	src/events/Makefile
	src/fields/Makefile
	src/misc/Makefile
	src/lists/Makefile
	src/nodekits/Makefile
	src/nodes/Makefile
	src/projectors/Makefile
	src/sensors/Makefile
	src/system/Makefile
	src/details/Makefile
	examples/Makefile
	examples/ivcat/Makefile
	examples/ivhierarchy/Makefile
	tools/Makefile
])

echo "Now, run 'make install' to build and install Coin."

dnl ************************************************************************
